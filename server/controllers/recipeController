
require('../models/database')
const Category = require('../models/Category')
const Recipe = require('../models/Recipe')


/**
*GET/
* Homepage
*/

exports.homepage = async (req, res) => {

    try {
        const limitNumber = 5
        const categories = await Category.find({}).limit(limitNumber) 
        const latest = await Recipe.find({}).sort({_id: -1}).limit(limitNumber)
        const african = await Recipe.find({'category': 'African'}).limit(limitNumber)
        const american = await Recipe.find({'category': 'American'}).limit(limitNumber)
        const chinese = await Recipe.find({'category': 'Chinese'}).limit(limitNumber)
        const food = { latest, african, american, chinese }
    res.render('index', {title: 'Cooking-Blog Home', categories, food}) 
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})   
    }
}

/**
*GET/about
* About
*/
  exports.about = async (req, res) => {
    const locals = {
        title: 'about',
        description: 'Cooking blog'
    }
    try {
       res.render('about', locals) 
    } catch (error) {
        console.log(error)
        
    }
  }


  /**
*GET/contact
* Contact
*/
exports.contact = async (req, res) => {
    const locals = {
        title: 'contact',
        description: 'Cooking blog'
    }
    try {
       res.render('contact', locals) 
    } catch (error) {
        console.log(error)
        
    }
  }

/**
*GET/categories
* Categories
*/
exports.exploreCategories = async (req, res) => {
    try {
        const limitNumber = 20
        const categories = await Category.find({}).limit(limitNumber) 
    res.render('categories', {title: 'Cooking-Blog Categories', categories}) 
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})    
    }
}

/**
*GET/categories/:id
* Categories By Id
*/
exports.exploreCategoriesById = async (req, res) => {
    try {
        let categoryId = req.params.id
        const limitNumber = 20
        const categoryById = await Recipe.find({'category': categoryId}).limit(limitNumber) 
    res.render('categories', {title: 'Cooking-Blog Categories', categoryById}) 
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})    
    }
}

/**
*GET/recipe/:id
* recipe
*/
exports.exploreRecipe = async (req, res) => {
    try {
         let recipeId = req.params.id
         const recipe = await Recipe.findById(recipeId)
    res.render('recipe', {title: 'Cooking Blog-Recipe', recipe}) 
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})    
    }
}

// async function insertDymmyCategoryData() {
//     try {
//         await Category.insertMany([
//             {
//                 "name": "African",
//                 "image": "african-food.jpg"
//             },
//             {
//                 "name": "Spanish",
//                 "image": "spanish-food.jpg"
//             },
//             {
//                 "name": "American",
//                 "image": "american-food.jpg"
//             },
//             {
//                 "name": "Chinese",
//                 "image": "chinese-food.jpg"
//             },
//             {
//                 "name": "Mexican",
//                 "image": "mexican-food.jpg"
//             },
//             {
//                 "name": "Indian",
//                 "image": "indian-food.jpg"
//             }
//         ]
//         )
//     } catch (error) {
//         console.log('error', + error)
        
//     }
// }
// insertDymmyCategoryData()


// async function insertDymmyRecipeData() {
//     try {
//         await Recipe.insertMany([
//             {
//                 "name": "West African Fufu",
//                 "description": `Peel the skin of the cassava with a potato peeler or a knife.
//                 Cut the peeled tuber into small cubes that can easily be processed in a blender. 
//                 Blend till a nice and smooth batter is formed.
//                 Transfer it to a pot and stir vigorously until the fufu is thick and smooth, like a semi-solid paste.
//                 Once the foofoo is ready, shape it into small balls, and wrap the balls individually in plastic wraps. This allows the fufu to retain its moisture and prevent it from forming a crust. 
                
//                 Source: https://cheflolaskitchen.com/fufu-recipe-how-to-make-fufu/`,
//                 "ingredients": [
//                    " 1 Yuca root cassava",
//                    "1 plantain Green",
//                     " ¼ cup water"
//                 ],
//                 "category": "African",
//                 "image": "west-african-fufu.jpg"

//             },
//             {
//                 "name": "American Dishes",
//                 "description": `Peel the skin of the cassava with a potato peeler or a knife.
//                 Cut the peeled tuber into small cubes that can easily be processed in a blender. 
//                 Blend till a nice and smooth batter is formed.
//                 Transfer it to a pot and stir vigorously until the fufu is thick and smooth, like a semi-solid paste.
//                 Once the foofoo is ready, shape it into small balls, and wrap the balls individually in plastic wraps. This allows the fufu to retain its moisture and prevent it from forming a crust. 
                
//                 Source: https://cheflolaskitchen.com/fufu-recipe-how-to-make-fufu/`,
//                 "ingredients": [
//                    " 1 Yuca root cassava",
//                    "1 plantain Green",
//                     " ¼ cup water"
//                 ],
//                 "category": "American",
//                 "image": "american-dishes.jpg"

//             },
//             {
//                 "name": "Spanish Food",
//                 "description": `Peel the skin of the cassava with a potato peeler or a knife.
//                 Cut the peeled tuber into small cubes that can easily be processed in a blender. 
//                 Blend till a nice and smooth batter is formed.
//                 Transfer it to a pot and stir vigorously until the fufu is thick and smooth, like a semi-solid paste.
//                 Once the foofoo is ready, shape it into small balls, and wrap the balls individually in plastic wraps. This allows the fufu to retain its moisture and prevent it from forming a crust. 
                
//                 Source: https://cheflolaskitchen.com/fufu-recipe-how-to-make-fufu/`,
//                 "ingredients": [
//                    " 1 Yuca root cassava",
//                    "1 plantain Green",
//                     " ¼ cup water"
//                 ],
//                 "category": "Spanish",
//                 "image": "spanish-food"

//             },
//             {
//                 "name": "Chinese Food",
//                 "description": `Peel the skin of the cassava with a potato peeler or a knife.
//                 Cut the peeled tuber into small cubes that can easily be processed in a blender. 
//                 Blend till a nice and smooth batter is formed.
//                 Transfer it to a pot and stir vigorously until the fufu is thick and smooth, like a semi-solid paste.
//                 Once the foofoo is ready, shape it into small balls, and wrap the balls individually in plastic wraps. This allows the fufu to retain its moisture and prevent it from forming a crust. 
                
//                 Source: https://cheflolaskitchen.com/fufu-recipe-how-to-make-fufu/`,
//                 "ingredients": [
//                    " 1 Yuca root cassava",
//                    "1 plantain Green",
//                     " ¼ cup water"
//                 ],
//                 "category": "Chinese",
//                 "image": "chinese-dishes.jpg"

//             },
//             {
//                 "name": "Mexican Food",
//                 "description": `Peel the skin of the cassava with a potato peeler or a knife.
//                 Cut the peeled tuber into small cubes that can easily be processed in a blender. 
//                 Blend till a nice and smooth batter is formed.
//                 Transfer it to a pot and stir vigorously until the fufu is thick and smooth, like a semi-solid paste.
//                 Once the foofoo is ready, shape it into small balls, and wrap the balls individually in plastic wraps. This allows the fufu to retain its moisture and prevent it from forming a crust. 
                
//                 Source: https://cheflolaskitchen.com/fufu-recipe-how-to-make-fufu/`,
//                 "ingredients": [
//                    " 1 Yuca root cassava",
//                    "1 plantain Green",
//                     " ¼ cup water"
//                 ],
//                 "category": "Mexican",
//                 "image": "mexican-dishes.jpg"

//             },

//         ]
//         )
//     } catch (error) {
//         console.log('error', + error)
        
//     }
// }
// insertDymmyRecipeData()

/**
*post/search/
* search
*/
exports.searchRecipe = async (req, res) => {
    try {
        let searchTerm = req.body.searchTerm
        let recipe = await Recipe.find({$text: {$search: searchTerm, $diacriticSensitive: true}})
        res.render('search', {title: 'Cooking Blog- Search', recipe})
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})
    }   
} 

/**
*GET/explore-latest
*Explore Latest
*/
exports.exploreLatest = async (req, res) => {
    try {
         const limitNumber = 20
         const recipe = await Recipe.find({}).sort({_id: -1}).limit(limitNumber)
    res.render('explore-latest', {title: 'Cooking Blog-Explore Latest', recipe}) 
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})    
    }
}

/**
*GET/explore-random
*Explore Random as json
*/
exports.exploreRandom = async (req, res) => {
    try {
         let count = await Recipe.find().countDocuments()
         let random = Math.floor(Math.random() * count)
         let recipe = await Recipe.findOne().skip(random).exec()
         //res.json(recipe)
    res.render('explore-random', {title: 'Cooking Blog-Explore Random', recipe}) 
    } catch (error) {
        res.status(500).send({message: error.message || 'Error Occured'})    
    }
}

/**
*GET/submit-recipe
*submit Recipe
*/
exports.submitRecipe = async (req, res) => {
    const inErrfoorsObj = req.flash('infoErrors')
    const infoSubmitObj = req.flash('infoSubmit')
    res.render('submit-recipe', {title: 'Cooking Blog-Submit Recipe', inErrfoorsObj, infoSubmitObj   }) 
   
}

/**
*POST/submit-recipe
*submit Recipe
*/
exports.submitRecipeOnPost = async (req, res) => { 
    try {

        let imageUploadFile
        let uploadPath
        let newImageName
        if (!req.files || Object.keys(req.files).length === 0) {
            console.log('No Files where uploaded');
        } else {

            imageUploadFile = req.files.image
            newImageName = Date.now() + imageUploadFile.name
            uploadPath = require('path').resolve('./') + '/public/uploads/' + newImageName
            imageUploadFile.mv(uploadPath, function(err) {
                if(err) return res.status(500).send(err)
            })
        }
        const newRecipe = new Recipe({
            name: req.body.name,
            description: req.body.description,
            email: req.body.email,
            ingredients: req.body.ingredients,
            category: req.body.categories,
            image: newImageName
    
        })
           await newRecipe.save()
        req.flash('infoSubmit', 'Recipe has been added.')
    res.redirect('submit-recipe')
    } catch (error) {
        req.flash('infoErrors', error)
        res.redirect('submit-recipe')
    } 
}


// async  function updateRecipe() {
//     try {
//         const res = await Recipe.updateOne({name: 'Fried Rice'}, {name: 'Fried Rice updated'})
//         res.n // Number of documents matched
//         res.nModified // Number of documents modified
//     } catch (error) {
//         console.log(error)  
//     }
// }
// updateRecipe()

async  function deleteRecipe() {
    try {
         await Recipe.deleteOne({name: 'New Chocolate Cake'})
    
    } catch (error) {
        console.log(error)  
    }
}
deleteRecipe()